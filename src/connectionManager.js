// Generated by CoffeeScript 1.3.1
(function() {
  var ConnectionManager, exports, sharedInstance;

  sharedInstance = null;

  ConnectionManager = (function() {

    ConnectionManager.name = 'ConnectionManager';

    function ConnectionManager(option) {
      var _base;
      this.option = option;
      if (sharedInstance) {
        return sharedInstance;
      }
      this.connection_pool = [];
      this.option || (this.option = {});
      (_base = this.option).size || (_base.size = 100);
    }

    ConnectionManager.prototype.size = function() {
      return this.connection_pool.length;
    };

    ConnectionManager.prototype.add = function(socket_connection) {
      return this.connection_pool.push(socket_connection);
    };

    ConnectionManager.prototype.remove = function(socket_connection) {};

    ConnectionManager.prototype.cp = function() {
      return this.connection_pool;
    };

    ConnectionManager.prototype.withoutSelf = function(socket_connection) {
      return this.connection_pool.filter(function(sc) {
        return sc !== socket_connection;
      });
    };

    ConnectionManager.prototype.broadCast = function(message) {
      return this.connection_pool.forEach(function(sc) {
        return sc.write(message + "\r\n");
      });
    };

    ConnectionManager.prototype.purgeIdeal = function() {};

    return ConnectionManager;

  })();

  ConnectionManager.sharedInstance = function() {
    return sharedInstance || new ConnectionManager();
  };

  exports = module.exports = ConnectionManager;

}).call(this);
